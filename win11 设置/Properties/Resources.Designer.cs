//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace win11_设置.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("win11_设置.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap dy {
            get {
                object obj = ResourceManager.GetObject("dy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap PKeyTool {
            get {
                object obj = ResourceManager.GetObject("PKeyTool", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] RightClickMan {
            get {
                object obj = ResourceManager.GetObject("RightClickMan", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 @(set &quot;0=%~f0&quot;^)#) &amp; powershell -nop -c iex([io.file]::ReadAllText($env:0)) &amp; exit/b
        ///#:: double-click to run or just copy-paste into powershell - it&apos;s a standalone hybrid script
        ///
        ///#:: v7 dynamically skips the anti-consumer windows 11 setup checks via /Product Server trick  
        ///#:: it is most reliable, and only has a &apos;Windows Server&apos; label cosmetic-ish difference
        ///#:: works with:
        ///#:: 11 setup via Windows Update (after using OfflineInsiderEnroll by whatever127 and abbodi1406)
        ///#:: 11 setup via mounted iso /  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string tpmstr {
            get {
                return ResourceManager.GetString("tpmstr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 @(set &apos;(=)||&apos; &lt;# lean and mean cmd / powershell hybrid #&gt; @&apos;
        ///
        ///::# Get 11 on &apos;unsupported&apos; PC via Windows Update or mounted ISO (no patching needed)
        ///::# if WU is stuck use windows_update_refresh.bat; Beta/Dev/Canary needs OfflineInsiderEnroll
        ///::# V13: skip 2nd tpm check on Canary iso; no Server label; future proofing; tested with 26010 iso, wu and wu repair version
        ///
        ///@echo off &amp; title get 11 on &apos;unsupported&apos; PC || AveYo 2023.12.07
        ///if /i &quot;%~f0&quot; neq &quot;%SystemDrive%\Scripts\get11.cmd&quot; goto setup
        ///powershel [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string tpmstr1 {
            get {
                return ResourceManager.GetString("tpmstr1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] 去除水印及弹窗 {
            get {
                object obj = ResourceManager.GetObject("去除水印及弹窗", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 工具 {
            get {
                object obj = ResourceManager.GetObject("工具", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 工具__1_ {
            get {
                object obj = ResourceManager.GetObject("工具 (1)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 文件夹 {
            get {
                object obj = ResourceManager.GetObject("文件夹", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
